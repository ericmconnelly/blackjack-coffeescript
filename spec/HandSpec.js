// Generated by CoffeeScript 1.9.3
var assert, expect;

assert = chai.assert;

expect = chai.expect;

describe("Hand Test", function() {
  it('should trigger handToDealer', function(done) {
    var hand;
    hand = new Hand();
    hand.on('handToDealer', function() {
      assert(true);
      return done();
    });
    return hand.stand();
  });
  it('should flip the card when called handleDealer', function() {
    var deck, hand, spy;
    deck = new Deck();
    hand = deck.dealDealer();
    spy = sinon.spy(hand.at(0), "flip");
    hand.handleDealer();
    return expect(hand.at(0).flip.callCount).to.be.equal(1);
  });
  it('should do the same thing like above', function() {
    var deck, hand;
    deck = new Deck();
    hand = deck.dealDealer();
    expect(hand.at(0).get('revealed')).to.be["false"];
    hand.handleDealer();
    return expect(hand.at(0).get('revealed')).to.be["true"];
  });
  it('should not flip the card when called handleDealer', function() {
    var deck, hand, spy;
    deck = new Deck();
    hand = deck.dealPlayer();
    spy = sinon.spy(hand.at(0), "flip");
    hand.handleDealer();
    return expect(hand.at(0).flip.callCount).to.be.equal(0);
  });
  return it('should hit the card when score is less than 17', function() {
    var deck, hand, spy;
    deck = new Deck();
    hand = deck.dealPlayer();
    hand.at(0).set('value', 5);
    hand.at(1).set('value', 2);
    spy = sinon.spy(hand, "handleDealer");
    hand.handleDealer();
    return expect(hand.bestScore()).to.be.below(17);
  });
});
